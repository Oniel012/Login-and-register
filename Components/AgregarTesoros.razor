@using TesorosApp.Data
@inject ITesoroService TS

<div class="mr-2 row">


    <form @onsubmit="HandleSubmit" class="col-md-7">

        <label for="nombre">Nombre</label>
        <input @bind-value="tesoro.Nombre_t" required type="text" name="nombre" id="nombre" class="form-control">
        <label for="fecha">Fecha</label>
        <input @bind-value="tesoro.Fecha_t" required type="date" name="fecha" id="fecha" class="form-control">
        <label for="peso">Peso (Libras)</label>
        <input @bind-value="tesoro.Peso" required type="number" name="peso" id="peso" class="form-control">
        <label for="valor">Valor</label>
        <input @bind-value="tesoro.Valor" required type="number" name="valor" id="valor" class="form-control" />
        <label for="lugar">Lugar</label>
        <input @bind-value="tesoro.Lugar" required type="text" name="lugar" id="lugar" class="form-control">
        <label for="lon">Longitud</label>
        <input @bind-value="coord.Lng" required type="number" step="any" name="lon" id="lon" class="form-control">
        <label for="lat">Latitud</label>
        <input @bind-value="coord.Lat" required type="number" step="any" name="lat" id="lat" class="form-control">
        <label for="iref">URL de Referencia</label>
        <input @bind-value="tesoro.UrlRef" type="text" name="iref" id="iref" class="form-control">
        <label for="descricion">Descripción</label>
        <textarea @bind="tesoro.Descripcion_t" required name="descripcion" id="descripcion" cols="30" rows="4" class="form-control"></textarea>

        <br>
        <input type="submit" value="Agregar" class="btn btn-success">
    </form>
    <div class="col-md-4">
    </div>
</div>

@code
{
    [Parameter]
    public Guid Uid { get; set; }
    private Tesoros tesoro = new Tesoros
    {
        Id = Guid.NewGuid(),
        Fecha_t = DateTime.Today
    };
    private Coordenadas coord = new Coordenadas
    {
        Id = Guid.NewGuid()
    };

    private async Task HandleSubmit()
    {
        tesoro.Cordenadas = coord;
        var status = await TS.SetTreasure(tesoro);
        if (status)
        {
            tesoro = new Tesoros
            {
                Id = Guid.NewGuid(),
                Fecha_t = DateTime.Today
            };
            coord = new Coordenadas
            {
                Id = Guid.NewGuid()
            };
            StateHasChanged();
        }
        Console.WriteLine(status);

    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (Uid != null)
            {
                coord.Tid = tesoro.Id;
                coord.Uid = Uid;
                tesoro.Uid = Uid;
            }
        }
    }
}